# -*- coding: utf-8 -*-
"""Carteira.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iU6MlxGvug57qROdWXm4-DjoDuftHNYy

- aula 2 (Definindo intervalos, calculando e plotando médias móveis) - https://youtu.be/BBomKv3NFNc
"""


import pandas as pd
import numpy as np
from matplotlib import pyplot as plt
import yfinance as yf
import pandas_datareader.data as web
yf.pdr_override()

def papel(acao, inicio, fim):
  return web.get_data_yahoo(acao, start=inicio, end=fim)

def verpapel(papel):
  papel['Close'].plot(figsize=(22, 8), label='Ação')
  papel['Close'].rolling(30).mean().plot(label='MM30')#media movel
  #papel['Close'].rolling(120).mean().plot(label='MM120')#media movel
  plt.legend()

"""## ITAU"""

ibov = papel('^BVSP',  '2016-01-01', '2023-01-23')

itau = papel('ITSA4.SA', '2016-01-01', '2023-01-29')
#itau[(itau.index.year >= 2022) & (itau.index.year <= 2023)]

verpapel(papel('ITSA4.SA', '2016-01-01', '2023-01-27'))


plt.hist(itau.Close)
itau.High.max()
itau.High.min()





ibov_f = ibov[(ibov.index.year >= 2022) & (ibov.index.year <= 2023)]
verpapel(ibov_f)

verpapel(papel('ITSA4.SA', '2016-01-01', '2023-01-23'))

"""## BOVA11"""

verpapel(papel('BOVA11.SA', '2015-01-01', '2023-01-27'))

verpapel(papel('^BVSP', '2015-01-01', '2023-01-27'))

"""## OUTRAS ANALISES """

lmt = yf.Ticker('LMT')

lmt.info

hist = lmt.history(period="max")
hist.tail()

plt.plot(hist['Close'], label='LMT')

dividendos = hist['Dividends'].resample('Y').sum()

plt.plot(dividendos.index.year[:-2], dividendos[:-2], label='LMT')

# Get the stock data
stock_data = web.get_data_yahoo('ITSA4.SA', start='2020-01-01', end='2023-01-20')

# Create a list to store purchase information
purchases = []

# Add purchase information to the list
purchases.append({"date": "2022-01-01", "price": 200, "shares": 100})
purchases.append({"date": "2022-04-01", "price": 150, "shares": 50})

# Get the current stock price
current_price = web.get_data_yahoo('ITSA4.SA', start='2020-01-01', end='2023-01-20')

# Compare the purchase price to the current price
# for purchase in purchases:
#     purchase_date = purchase["date"]
#     purchase_price = purchase["price"]
#     purchase_shares = purchase["shares"]
#     current_price_on_purchase_date = stock_data.loc[purchase_date]["Close"]
#     difference = current_price_on_purchase_date - purchase_price
#     print(f"On {purchase_date}, {purchase_shares} shares of stock were purchased for ${purchase_price}. The current price is ${current_price_on_purchase_date}, making a difference of ${difference}")

print(purchases)

current_price